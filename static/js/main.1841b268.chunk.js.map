{"version":3,"sources":["api/index.js","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["getImages","search","page","axios","get","Modal","handleCloseModal","e","keyCode","props","clearFullScreenImage","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","this","fullScreenImage","className","onClick","src","largeImageURL","alt","Component","Searchbar","handleInput","onSubmit","type","name","value","autoComplete","autoFocus","placeholder","onChange","propTypes","PropTypes","string","func","ImageGalleryItem","element","openImage","previewURL","tags","id","Button","imgExist","loadMore","ImageGallery","images","map","key","length","App","setState","target","preventDefault","state","API","then","data","hits","find","elem","console","log","prevProps","prevState","prev","next","snapshot","scrollTo","top","document","documentElement","scrollHeight","behavior","defaultProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1841b268.chunk.js","sourcesContent":["import axios from 'axios';\n\n// https://pixabay.com/api/?key=18301790-18086bbe5ae929649d07b40f0\n\nexport const getImages = (search, page = 1) => {\n  return axios.get(`https://pixabay.com/api/?q=${search}&page=${page}&key=18301790-18086bbe5ae929649d07b40f0&image_type=photo&orientation=horizontal&per_page=12`)\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Modal extends Component {\n  handleCloseModal = (e) => {\n    if (e.keyCode === 27) {\n      this.props.clearFullScreenImage();\n    }\n  };\n\n  componentDidMount = () => window.addEventListener('keydown', this.handleCloseModal);\n  componentWillUnmount = () => window.removeEventListener('keydown', this.handleCloseModal);\n\n  render() {\n    return this.props.fullScreenImage ?\n      (<div className=\"Overlay\" onClick={this.props.clearFullScreenImage}>\n        <div className=\"Modal\">\n          <img src={this.props.fullScreenImage.largeImageURL} alt=\"\"/>\n        </div>\n      </div>) :\n      null\n  }\n}\n\nModal.propTypes = {\n  fullScreenImage: PropTypes.object,\n  clearFullScreenImage: PropTypes.func\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Modal} from \"../Modal/Modal\";\n\nexport const Searchbar = ({search, handleInput, getImages}) => {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={getImages}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          name='search'\n          value={search}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleInput}\n        />\n      </form>\n    </header>\n  )\n}\n\nModal.propTypes = {\n  search: PropTypes.string,\n  handleInput: PropTypes.func,\n  getImages: PropTypes.func\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGalleryItem = ({element, openImage}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img src={element.previewURL}\n           alt={element.tags}\n           className=\"ImageGalleryItem-image\"\n           onClick={() => openImage(element.id)}/>\n    </li>\n  )\n}\n\nImageGalleryItem.propTypes = {\n  element: PropTypes.object,\n  openImage: PropTypes.func\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Button = ({imgExist, loadMore}) => {\n  return imgExist ? (<button onClick={loadMore}>Load more</button>) : null\n}\n\nButton.propTypes = {\n  imgExist: PropTypes.bool,\n  loadMore: PropTypes.func\n}\n","import React from \"react\";\nimport {ImageGalleryItem} from \"../ImageGalleryItem/ImageGalleryItem\";\nimport {Button} from \"../Button/Button\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGallery = ({images, openImage, loadMore}) => {\n  return (\n    <div>\n      <ul className=\"ImageGallery\">\n        {images.map(element => <ImageGalleryItem key={element.id} element={element} openImage={openImage}/>)}\n      </ul>\n      <Button imgExist={!!images.length} loadMore={loadMore}/>\n    </div>\n  )\n}\n\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  openImage: PropTypes.func,\n  loadMore: PropTypes.func,\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as API from './api/index'\n\nimport {Searchbar} from \"./components/Searchbar/Searchbar\";\nimport {ImageGallery} from \"./components/ImageGallery/ImageGallery\";\nimport {Modal} from \"./components/Modal/Modal\";\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n      search: '',\n      page: 0,\n      fullScreenImage: null\n    }\n  }\n\n  handleInput = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  getImages = (e) => {\n    e.preventDefault();\n\n    if (!this.state.search) {\n      this.setState({images: [], page: 0});\n      return;\n    }\n\n    API.getImages(this.state.search)\n      .then(({data}) => {\n        this.setState(({images}) => {\n          return {\n            images: [...data.hits],\n            page: 1\n          }\n        })\n      })\n  }\n\n  loadMore = (e) => {\n    e.preventDefault();\n    API.getImages(this.state.search, this.state.page + 1)\n      .then(({data}) => {\n        this.setState(({images, page}) => {\n          return {\n            images: [...images, ...data.hits],\n            page: ++page\n          }\n        })\n      })\n  }\n\n  openImage = (id) => {\n    this.setState(({images}) => {\n      const fullScreenImage = images.find((elem) => elem.id === id);\n      return {fullScreenImage}\n    })\n  }\n\n  clearFullScreenImage = (e) => {\n    console.log(e);\n    this.setState({fullScreenImage: null})\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    const prev = prevState.images;\n    const next = this.state.images;\n\n    if (prev.length < next.length) {\n      return next.length - prev.length\n    }\n\n    return 0\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (snapshot) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  render() {\n    return <div>\n      <Searchbar search={this.state.search} handleInput={this.handleInput} getImages={this.getImages}/>\n      <ImageGallery images={this.state.images} openImage={this.openImage} loadMore={this.loadMore}/>\n      <Modal fullScreenImage={this.state.fullScreenImage} clearFullScreenImage={this.clearFullScreenImage}/>\n    </div>;\n  }\n}\n\nApp.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  search: PropTypes.string,\n  page: PropTypes.number,\n  fullScreenImage: PropTypes.object\n}\n\nApp.defaultProps = {\n  images: [],\n  search: '',\n  page: 0,\n  fullScreenImage: null\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}